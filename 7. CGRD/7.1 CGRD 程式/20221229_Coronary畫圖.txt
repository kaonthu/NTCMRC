#install.packages("survminer")

#install.packages("ggsurvplot")
#install.packages("magrittr")
#install.packages("ggplot2")
#install.packages("ggfortify")


#library(magrittr) 
#library(ggplot2)

#library(ggfortify)
#library(survival)
#library("survminer")

library(survival)
library(survminer)

#############################################

head(result5)
dim(result5)
names(result5)


result5[which(result5$type.7!=""),c("IPDAT.7","DSSID.7","DSSID1.6","DSSID2.6","DSSID3.6","DSSID4.6","DSSID5.6","type.7")]

result5$Coronary_status <- 1 
#將Coronary的狀態設為Censored
result5[which(result5$type.7!=""),c("Coronary_status")] <- 2
#將有發生Coronary的狀態設為2


f = function(x){
a = 365 * (as.numeric(substr(x,1,4)) - 2003)+
30 * (as.numeric(substr(x,5,6)) - 3)+
as.numeric(substr(x,7,8))
return(a)
}

result5$Coronary_time <- f(20201231)

AA <- result5[which(result5$type.7!=""),c("IPDAT.7")]
# 得Coronary 的時間

result5[which(result5$type.7!=""),c("Coronary_time")]  <- f(AA)

########################################

result5[,c("PNPLA3","Coronary_time","Coronary_status","IPDAT.7","DSSID.7","DSSID1.6","DSSID2.6","DSSID3.6","DSSID4.6","DSSID5.6","type.7")]

fit<- survfit(Surv(Coronary_time, Coronary_status) ~ PNPLA3, data = result5)

ggsurvplot(fit, pval = TRUE)
ggsurvplot(fit, pval = TRUE,xlim = c(0,8000))
ggsurvplot(fit, pval = TRUE,xlim = c(0,7000))
ggsurvplot(fit, pval = TRUE,xlim = c(0,7000),ylim = c(0.9,1))

summary(fit)

